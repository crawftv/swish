var _user$project$Main$exerciseView = function (exercise) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(exercise.q)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(exercise.a)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$exerciseListView = function (exercises) {
	return A2(
		_elm_lang$html$Html$tbody,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Main$exerciseView, exercises));
};
var _user$project$Main$lessonView = function (course) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(course),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$courseView = function (course) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(course),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$courseListView = function (courses) {
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Main$courseView, courses));
};
var _user$project$Main$lessonListView = function (courses) {
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Main$courseView, courses));
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Courses'),
			_1: {
				ctor: '::',
				_0: _user$project$Main$courseListView(model.courseList),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text('lessons'),
					_1: {
						ctor: '::',
						_0: _user$project$Main$lessonListView(model.lessonList),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text('exercises'),
							_1: {
								ctor: '::',
								_0: _user$project$Main$exerciseListView(model.exerciseList),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text('elm Works'),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'InputAnswer':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{answerInput: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'CourseListLoaded':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{courseList: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'LessonListLoaded':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{lessonList: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{exerciseList: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$initModel = {
	answerInput: '',
	courseList: {ctor: '[]'},
	lessonList: {ctor: '[]'},
	exerciseList: {ctor: '[]'}
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$loadLesson = _elm_lang$core$Native_Platform.incomingPort(
	'loadLesson',
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string));
var _user$project$Main$loadCourse = _elm_lang$core$Native_Platform.incomingPort(
	'loadCourse',
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string));
var _user$project$Main$loadExerciseList = _elm_lang$core$Native_Platform.incomingPort(
	'loadExerciseList',
	_elm_lang$core$Json_Decode$list(
		A2(
			_elm_lang$core$Json_Decode$andThen,
			function (q) {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (a) {
						return _elm_lang$core$Json_Decode$succeed(
							{q: q, a: a});
					},
					A2(_elm_lang$core$Json_Decode$field, 'a', _elm_lang$core$Json_Decode$string));
			},
			A2(_elm_lang$core$Json_Decode$field, 'q', _elm_lang$core$Json_Decode$string))));
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {answerInput: a, courseList: b, lessonList: c, exerciseList: d};
	});
var _user$project$Main$Exercise = F2(
	function (a, b) {
		return {q: a, a: b};
	});
var _user$project$Main$ExerciseListLoaded = function (a) {
	return {ctor: 'ExerciseListLoaded', _0: a};
};
var _user$project$Main$LessonListLoaded = function (a) {
	return {ctor: 'LessonListLoaded', _0: a};
};
var _user$project$Main$CourseListLoaded = function (a) {
	return {ctor: 'CourseListLoaded', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$Main$loadCourse(_user$project$Main$CourseListLoaded),
			_1: {
				ctor: '::',
				_0: _user$project$Main$loadLesson(_user$project$Main$LessonListLoaded),
				_1: {
					ctor: '::',
					_0: _user$project$Main$loadExerciseList(_user$project$Main$ExerciseListLoaded),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$InputAnswer = function (a) {
	return {ctor: 'InputAnswer', _0: a};
};
